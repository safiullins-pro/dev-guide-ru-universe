import React, { useState } from 'react';
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { 
  Chart as ChartJS, 
  CategoryScale, 
  LinearScale, 
  BarElement, 
  Title, 
  Tooltip, 
  Legend 
} from 'chart.js';
import { Bar } from 'react-chartjs-2';

// Chart.js registration
ChartJS.register(
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend
);

// Import images
import GrokInterface from '../assets/grok-interface.jpg';
import PerplexityDashboard from '../assets/perplexity-dashboard.jpg';
import GoogleAIStudio from '../assets/google-ai-studio.jpg';
import GeminiCLI from '../assets/gemini-cli.jpg';
import ClaudeInterface from '../assets/claude-interface.jpg';
import VSCodeEditor from '../assets/vscode-editor.jpg';
import DockerContainers from '../assets/docker-containers.jpg';
import SupabaseDashboard from '../assets/supabase-dashboard.jpg';
import ClickHouseInterface from '../assets/clickhouse-interface.jpg';
import C4ContextDiagram from '../assets/c4-context-diagram.jpg';

interface ToolCardProps {
  title: string;
  description: string;
  image: string;
  pros: string[];
  cons: string[];
  useCase: string;
  link: string;
  freeTier?: string;
}

const ToolCard: React.FC<ToolCardProps> = ({ 
  title, 
  description, 
  image, 
  pros, 
  cons, 
  useCase, 
  link, 
  freeTier 
}) => {
  return (
    <Card className="overflow-hidden border-border bg-card/50 backdrop-blur-sm hover:shadow-lg transition-all duration-300 hover:scale-[1.02]">
      <div className="aspect-video overflow-hidden">
        <img 
          src={image} 
          alt={title} 
          className="w-full h-full object-cover transition-transform duration-300 hover:scale-105" 
        />
      </div>
      <CardContent className="p-6">
        <div className="flex items-center justify-between mb-3">
          <h3 className="text-xl font-bold text-foreground">{title}</h3>
          <Button variant="outline" size="sm" asChild>
            <a href={link} target="_blank" rel="noopener noreferrer">
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å
            </a>
          </Button>
        </div>
        
        <p className="text-muted-foreground mb-4">{description}</p>
        
        {freeTier && (
          <Badge variant="secondary" className="mb-3">
            {freeTier}
          </Badge>
        )}
        
        <div className="space-y-3">
          <div>
            <h4 className="text-sm font-semibold text-tech-green mb-2">‚úÖ –ü–ª—é—Å—ã:</h4>
            <ul className="text-sm text-muted-foreground space-y-1">
              {pros.map((pro, index) => (
                <li key={index}>‚Ä¢ {pro}</li>
              ))}
            </ul>
          </div>
          
          <div>
            <h4 className="text-sm font-semibold text-destructive mb-2">‚ùå –ú–∏–Ω—É—Å—ã:</h4>
            <ul className="text-sm text-muted-foreground space-y-1">
              {cons.map((con, index) => (
                <li key={index}>‚Ä¢ {con}</li>
              ))}
            </ul>
          </div>
          
          <div>
            <h4 className="text-sm font-semibold text-tech-orange mb-2">üéØ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</h4>
            <p className="text-sm text-muted-foreground">{useCase}</p>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

const DevEcosystemDocs: React.FC = () => {
  const [activeSection, setActiveSection] = useState<string>('intro');

  // Chart data for AI tools comparison
  const chartData = {
    labels: ['Grok', 'Perplexity', 'Google AI Studio', 'Gemini CLI', 'Claude', 'OpenRouter', 'Loveable'],
    datasets: [
      {
        label: '–†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞',
        data: [7, 5, 9, 8, 10, 7, 6],
        backgroundColor: 'hsl(217, 91%, 60%)',
        borderColor: 'hsl(217, 91%, 60%)',
        borderWidth: 1,
      },
      {
        label: '–©–µ–¥—Ä–æ—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞',
        data: [4, 6, 10, 8, 7, 8, 9],
        backgroundColor: 'hsl(30, 100%, 60%)',
        borderColor: 'hsl(30, 100%, 60%)',
        borderWidth: 1,
      },
    ],
  };

  const chartOptions = {
    responsive: true,
    plugins: {
      legend: {
        position: 'top' as const,
        labels: {
          color: 'hsl(210, 40%, 98%)'
        }
      },
      title: {
        display: true,
        text: '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤',
        color: 'hsl(210, 40%, 98%)'
      },
    },
    scales: {
      y: {
        beginAtZero: true,
        max: 10,
        ticks: {
          color: 'hsl(210, 40%, 98%)'
        },
        grid: {
          color: 'hsl(217, 32%, 17%)'
        }
      },
      x: {
        ticks: {
          color: 'hsl(210, 40%, 98%)'
        },
        grid: {
          color: 'hsl(217, 32%, 17%)'
        }
      }
    },
  };

  const aiTools = [
    {
      title: "Grok",
      description: "AI –æ—Ç xAI, –∂–∏–≤—É—â–∏–π –≤ X, –ø–æ–¥–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã —Å –ø–æ—Ä—Ü–∏–µ–π –¥–µ—Ä–∑–æ—Å—Ç–∏.",
      image: GrokInterface,
      pros: [
        "–°–≤–µ–∂–∞–∫ –¥–∞–Ω–Ω—ã—Ö ‚Äî —Ç—è–Ω–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ X",
        "–ï—Å—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä ‚Äî –æ—Ç–≤–µ—á–∞–µ—Ç —Å —é–º–æ—Ä–æ–º –∏ –æ—Å—Ç—Ä–æ—É–º–∏–µ–º",
        "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã –∏ –Ω–æ–≤–æ—Å—Ç–∏"
      ],
      cons: [
        "–ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥–≤–∑—è—Ç—ã–º (–æ—Ç—Ä–∞–∂–∞–µ—Ç —à—É–º –∏–∑ X)",
        "–ù—É–∂–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ X Premium"
      ],
      useCase: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–¥–æ–≤, –ø–æ–∏—Å–∫ —Å–≤–µ–∂–µ–π –∏–Ω—Ñ—ã",
      link: "https://x.ai/grok",
      freeTier: "–¢—Ä–µ–±—É–µ—Ç X Premium"
    },
    {
      title: "Perplexity AI",
      description: "–ù–∞–∫–∞—á–∞–Ω–Ω–∞—è –ø–æ–∏—Å–∫–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏.",
      image: PerplexityDashboard,
      pros: [
        "–ß–µ–∫–∏ ‚Äî —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–∫—Ç–æ–≤",
        "–†–µ–∂–∏–º Copilot –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–≥—Ä—É–∂–µ–Ω–∏—è",
        "–§–∏–ª—å—Ç—Ä—ã –ø–æ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–º —Å—Ç–∞—Ç—å—è–º, Reddit –∏ —Ç.–¥."
      ],
      cons: [
        "–ù–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à –¥–ª—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–∏—Å—å–º–∞"
      ],
      useCase: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–∫—Ç–æ–≤",
      link: "https://www.perplexity.ai",
      freeTier: "~5 Copilot –∑–∞–ø—Ä–æ—Å–æ–≤/4 —á–∞—Å–∞"
    },
    {
      title: "Google AI Studio",
      description: "–°—Ç—É–¥–∏—è –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ —Å –º–æ–¥–µ–ª—è–º–∏ Google.",
      image: GoogleAIStudio,
      pros: [
        "–©–µ–¥—Ä—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ ‚Äî 60 –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω",
        "Gemini Pro –∏ –¥—Ä—É–≥–∏–µ –º–æ–¥–µ–ª–∏",
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Cloud"
      ],
      cons: [
        "–ú–µ–Ω–µ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —á–µ–º –¥—Ä—É–≥–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã"
      ],
      useCase: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞, API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏, —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã",
      link: "https://aistudio.google.com",
      freeTier: "60 –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ"
    },
    {
      title: "Gemini CLI",
      description: "–ö–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Gemini AI.",
      image: GeminiCLI,
      pros: [
        "–ë—ã—Å—Ç—Ä–∞—è —Ä–∞–±–æ—Ç–∞ –∏–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞",
        "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ —Å–∫—Ä–∏–ø—Ç–∏–Ω–≥",
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π"
      ],
      cons: [
        "–ù—É–∂–Ω—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏",
        "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π UI"
      ],
      useCase: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, DevOps",
      link: "https://cloud.google.com/sdk/gcloud/reference/ai",
      freeTier: "–ß–∞—Å—Ç—å Google Cloud"
    },
    {
      title: "Claude",
      description: "AI –æ—Ç Anthropic —Å –æ—Ä–∞–Ω–∂–µ–≤—ã–º–∏ –∏ —Å–∏–Ω–∏–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏.",
      image: ClaudeInterface,
      pros: [
        "–û–≥—Ä–æ–º–Ω–æ–µ –æ–∫–Ω–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "–•–æ—Ä–æ—à –≤ –∞–Ω–∞–ª–∏–∑–µ –∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è—Ö",
        "–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏ —ç—Ç–∏—á–Ω—ã–π"
      ],
      cons: [
        "–ú–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã–º",
        "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ"
      ],
      useCase: "–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏, –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏",
      link: "https://www.anthropic.com/claude",
      freeTier: "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø"
    }
  ];

  const softwareTools = [
    {
      title: "Visual Studio Code",
      description: "–ö–æ—Ä–æ–ª—å —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤ –∫–æ–¥–∞ —Å AI-powered —Ñ–æ—Ä–∫–∞–º–∏ —Ç–∏–ø–∞ Cursor.",
      image: VSCodeEditor,
      why: "–ë—ã—Å—Ç—Ä—ã–π, —Ä–∞—Å—à–∏—Ä—è–µ–º—ã–π, –≥–æ—Ç–æ–≤ –∫ AI",
      link: "https://code.visualstudio.com"
    },
    {
      title: "Docker",
      description: "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º—ã—Ö —Å–±–æ—Ä–æ–∫. –ù–∏–∫–∞–∫–∏—Ö –±–æ–ª—å—à–µ '—É –º–µ–Ω—è —Ä–∞–±–æ—Ç–∞–µ—Ç'.",
      image: DockerContainers,
      why: "–ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –º–µ–∂–¥—É –æ–∫—Ä—É–∂–µ–Ω–∏—è–º–∏",
      link: "https://www.docker.com"
    }
  ];

  const techStack = [
    {
      title: "Supabase",
      description: "PostgreSQL —Å —Å—É–ø–µ—Ä—Å–∏–ª–∞–º–∏ ‚Äî –ë–î, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, API –∏–∑ –∫–æ—Ä–æ–±–∫–∏.",
      image: SupabaseDashboard,
      role: "–ë—ã—Å—Ç—Ä—ã–π setup –±—ç–∫–µ–Ω–¥–∞",
      link: "https://supabase.com"
    },
    {
      title: "ClickHouse",
      description: "–ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω–∞—è –∫–æ–ª–æ–Ω–æ—á–Ω–∞—è –ë–î –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.",
      image: ClickHouseInterface,
      role: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
      link: "https://clickhouse.com"
    }
  ];

  return (
    <div className="min-h-screen bg-background">
      {/* Hero Section */}
      <section className="relative overflow-hidden bg-gradient-to-br from-background via-card to-secondary/20 py-20">
        <div className="absolute inset-0 opacity-20"></div>
        <div className="container mx-auto px-6 relative z-10">
          <div className="text-center max-w-4xl mx-auto">
            <h1 className="text-5xl md:text-7xl font-bold mb-6 bg-gradient-to-r from-tech-blue via-tech-green to-tech-orange bg-clip-text text-transparent">
              –ù–∞—à–∞ Dev-–í—Å–µ–ª–µ–Ω–Ω–∞—è
            </h1>
            <p className="text-xl md:text-2xl text-muted-foreground mb-8 leading-relaxed">
              –•–∞–æ—Ç–∏—á–Ω—ã–π, –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –±–µ—Å–ø–æ—Ä—è–¥–æ–∫ –∏–∑ AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –æ–ø–µ–Ω—Å–æ—Ä—Å–Ω—ã—Ö –ø–ª—é—à–µ–∫ –∏ —Ç–µ—Ö-—Å—Ç–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç —Å–≤–æ–µ –¥–µ–ª–æ. 
              <br />
              <span className="text-primary font-semibold">
                –ù–∞—à–∞ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è?
              </span> –ò—Å–ø–æ–ª—å–∑—É–π –ª—É—á—à–∏–µ (—á–∞—Å—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ) –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∫–æ–¥—å –±—ã—Å—Ç—Ä–æ, –Ω–µ —Ç—Ä–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ —Ñ–∏–≥–Ω—é.
            </p>
            <div className="flex flex-wrap gap-4 justify-center">
              <Badge variant="outline" className="px-4 py-2 text-lg border-tech-blue text-tech-blue">
                AI-Powered
              </Badge>
              <Badge variant="outline" className="px-4 py-2 text-lg border-tech-green text-tech-green">
                Open Source
              </Badge>
              <Badge variant="outline" className="px-4 py-2 text-lg border-tech-orange text-tech-orange">
                Fast & Efficient
              </Badge>
            </div>
            <p className="text-sm text-muted-foreground mt-6 italic">
              üí° <strong>–ü—Ä–æ—Ñ—Ç–∏–ø:</strong> –ù–µ –ø—Ä–æ—Å—Ç–æ —á–∏—Ç–∞–π —ç—Ç–æ ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è, —Ç—ã–∫–∞–π –∫–Ω–æ–ø–∫–∏, –ª–æ–º–∞–π –≤—Å—ë. –¢–∞–∫ –∏ —É—á–∞—Ç—Å—è.
            </p>
          </div>
        </div>
      </section>

      {/* Navigation */}
      <nav className="sticky top-0 z-50 bg-card/80 backdrop-blur-md border-b border-border">
        <div className="container mx-auto px-6">
          <div className="flex space-x-8 py-4 overflow-x-auto">
            {[
              { id: 'intro', label: '–í–≤–µ–¥–µ–Ω–∏–µ' },
              { id: 'ai-tools', label: 'AI –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã' },
              { id: 'software', label: '–°–æ—Ñ—Ç' },
              { id: 'stack', label: '–¢–µ—Ö-—Å—Ç–µ–∫' },
              { id: 'metrik', label: 'MetrikCollector' },
              { id: 'links', label: '–°—Å—ã–ª–∫–∏' }
            ].map((section) => (
              <button
                key={section.id}
                onClick={() => setActiveSection(section.id)}
                className={`whitespace-nowrap px-4 py-2 rounded-lg transition-all duration-200 ${
                  activeSection === section.id
                    ? 'bg-primary text-primary-foreground'
                    : 'text-muted-foreground hover:text-foreground hover:bg-muted'
                }`}
              >
                {section.label}
              </button>
            ))}
          </div>
        </div>
      </nav>

      <div className="container mx-auto px-6 py-12">
        {/* AI Tools Section */}
        <section id="ai-tools" className="mb-20">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold mb-4 text-foreground">AI –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: –ù–∞—à –í—Ç–æ—Ä–æ–π –ú–æ–∑–≥</h2>
            <p className="text-lg text-muted-foreground max-w-3xl mx-auto">
              AI ‚Äî –Ω–∞—à –≤—Ç–æ—Ä–æ–π –ø–∏–ª–æ—Ç, –æ—Ç –∫–æ–¥–∏–Ω–≥–∞ –¥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π. –í–æ—Ç –Ω–∞—à–∞ –ª–∏–Ω–µ–π–∫–∞ —Ç–æ–ø—á–∏–∫–æ–≤:
            </p>
          </div>

          {/* Chart */}
          <div className="mb-12 bg-card/50 p-6 rounded-lg border border-border">
            <Bar data={chartData} options={chartOptions} />
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-8">
            {aiTools.map((tool, index) => (
              <ToolCard key={index} {...tool} />
            ))}
          </div>
        </section>

        {/* Software Section */}
        <section id="software" className="mb-20">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold mb-4 text-foreground">–û—Å–Ω–æ–≤–Ω–æ–π –°–æ—Ñ—Ç</h2>
            <p className="text-lg text-muted-foreground">
              –ù–∞—à–∏ go-to –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á:
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {softwareTools.map((tool, index) => (
              <Card key={index} className="overflow-hidden border-border bg-card/50 backdrop-blur-sm hover:shadow-lg transition-all duration-300">
                <div className="aspect-video overflow-hidden">
                  <img 
                    src={tool.image} 
                    alt={tool.title} 
                    className="w-full h-full object-cover transition-transform duration-300 hover:scale-105" 
                  />
                </div>
                <CardContent className="p-6">
                  <div className="flex items-center justify-between mb-3">
                    <h3 className="text-xl font-bold text-foreground">{tool.title}</h3>
                    <Button variant="outline" size="sm" asChild>
                      <a href={tool.link} target="_blank" rel="noopener noreferrer">
                        –°–∫–∞—á–∞—Ç—å
                      </a>
                    </Button>
                  </div>
                  <p className="text-muted-foreground mb-4">{tool.description}</p>
                  <div>
                    <h4 className="text-sm font-semibold text-tech-green mb-2">–ü–æ—á–µ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º:</h4>
                    <p className="text-sm text-muted-foreground">{tool.why}</p>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* Tech Stack Section */}
        <section id="stack" className="mb-20">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold mb-4 text-foreground">–¢–µ—Ö-—Å—Ç–µ–∫</h2>
            <p className="text-lg text-muted-foreground">
              –ù–∞—à —Å—Ç–µ–∫ –ø–æ—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏, –º–∞—Å—à—Ç–∞–±–∞ –∏ –∑–¥—Ä–∞–≤–æ–º—ã—Å–ª–∏—è:
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {techStack.map((tech, index) => (
              <Card key={index} className="overflow-hidden border-border bg-card/50 backdrop-blur-sm hover:shadow-lg transition-all duration-300">
                <div className="aspect-video overflow-hidden">
                  <img 
                    src={tech.image} 
                    alt={tech.title} 
                    className="w-full h-full object-cover transition-transform duration-300 hover:scale-105" 
                  />
                </div>
                <CardContent className="p-6">
                  <div className="flex items-center justify-between mb-3">
                    <h3 className="text-xl font-bold text-foreground">{tech.title}</h3>
                    <Button variant="outline" size="sm" asChild>
                      <a href={tech.link} target="_blank" rel="noopener noreferrer">
                        –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
                      </a>
                    </Button>
                  </div>
                  <p className="text-muted-foreground mb-4">{tech.description}</p>
                  <div>
                    <h4 className="text-sm font-semibold text-tech-orange mb-2">–†–æ–ª—å:</h4>
                    <p className="text-sm text-muted-foreground">{tech.role}</p>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* MetrikCollector Section */}
        <section id="metrik" className="mb-20">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold mb-4 text-foreground">MetrikCollector: –ö–∞–∫ –í—Å—ë –†–∞–±–æ—Ç–∞–µ—Ç –í–º–µ—Å—Ç–µ</h2>
            <p className="text-lg text-muted-foreground max-w-3xl mx-auto">
              Node.js –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±–∏—Ä–∞–µ—Ç –º–µ—Ç—Ä–∏–∫–∏, —Å—Ç—Ä–∏–º–∏—Ç –∏—Ö —á–µ—Ä–µ–∑ Kafka –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ ClickHouse/PostgreSQL –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
            </p>
          </div>

          {/* Architecture Diagram */}
          <div className="mb-8">
            <Card className="overflow-hidden border-border bg-card/50">
              <CardContent className="p-6">
                <h3 className="text-xl font-bold mb-4 text-center text-foreground">–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ (C4 Model)</h3>
                <div className="aspect-video overflow-hidden rounded-lg">
                  <img 
                    src={C4ContextDiagram} 
                    alt="C4 Context Diagram - MetrikCollector Architecture" 
                    className="w-full h-full object-cover shadow-lg"
                  />
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Stack Breakdown Table */}
          <Card className="border-border bg-card/50">
            <CardContent className="p-6">
              <h3 className="text-xl font-bold mb-4 text-foreground">–†–∞–∑–±–æ—Ä —Å—Ç–µ–∫–∞</h3>
              <div className="overflow-x-auto">
                <table className="w-full border-collapse">
                  <thead>
                    <tr className="border-b border-border">
                      <th className="text-left py-3 px-4 font-semibold text-foreground">–ö–æ–º–ø–æ–Ω–µ–Ω—Ç</th>
                      <th className="text-left py-3 px-4 font-semibold text-foreground">–°—Ç–µ–∫</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr className="border-b border-border">
                      <td className="py-3 px-4 font-medium text-tech-blue">Frontend</td>
                      <td className="py-3 px-4 text-muted-foreground">TypeScript, React, Vite, Shadcn UI, Tailwind CSS, TanStack Query</td>
                    </tr>
                    <tr className="border-b border-border">
                      <td className="py-3 px-4 font-medium text-tech-green">Backend</td>
                      <td className="py-3 px-4 text-muted-foreground">Node.js, TypeScript, Fastify, PostgreSQL, ClickHouse, Redis, BullMQ, kafkajs</td>
                    </tr>
                    <tr className="border-b border-border">
                      <td className="py-3 px-4 font-medium text-tech-orange">MetrikCollector</td>
                      <td className="py-3 px-4 text-muted-foreground">Node.js, TypeScript, ClickHouse, kafkajs, axios</td>
                    </tr>
                    <tr>
                      <td className="py-3 px-4 font-medium text-accent">–î—Ä—É–≥–æ–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å</td>
                      <td className="py-3 px-4 text-muted-foreground">.NET 9.0, ASP.NET Core (C#)</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </CardContent>
          </Card>
        </section>

        {/* Links Section */}
        <section id="links" className="mb-20">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold mb-4 text-foreground">–°—Å—ã–ª–∫–∏</h2>
            <p className="text-lg text-muted-foreground">
              –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤—Å–µ —É–ø–æ–º—è–Ω—É—Ç—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Å–µ—Ä–≤–∏—Å—ã:
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {[
              { title: "Grok", url: "https://x.ai/grok", category: "AI" },
              { title: "Perplexity AI", url: "https://www.perplexity.ai", category: "AI" },
              { title: "Google AI Studio", url: "https://aistudio.google.com", category: "AI" },
              { title: "Gemini CLI", url: "https://cloud.google.com/sdk/gcloud/reference/ai", category: "AI" },
              { title: "Claude", url: "https://www.anthropic.com/claude", category: "AI" },
              { title: "OpenRouter", url: "https://openrouter.ai", category: "AI" },
              { title: "Loveable.dev", url: "https://loveable.dev", category: "AI" },
              { title: "Visual Studio Code", url: "https://code.visualstudio.com", category: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞" },
              { title: "Docker", url: "https://www.docker.com", category: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞" },
              { title: "Supabase", url: "https://supabase.com", category: "Backend" },
              { title: "ClickHouse", url: "https://clickhouse.com", category: "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" },
              { title: "Redis", url: "https://redis.io", category: "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" },
              { title: "Apache Kafka", url: "https://kafka.apache.org", category: "–°—Ç—Ä–∏–º–∏–Ω–≥" },
              { title: "AWS", url: "https://aws.amazon.com", category: "–û–±–ª–∞–∫–æ" },
              { title: "Google Cloud", url: "https://cloud.google.com", category: "–û–±–ª–∞–∫–æ" },
              { title: "Yandex.Cloud", url: "https://yandex.cloud", category: "–û–±–ª–∞–∫–æ" },
              { title: "Kubernetes", url: "https://kubernetes.io", category: "–û—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è" },
              { title: "C4 Model", url: "https://c4model.com", category: "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞" },
              { title: "IcePanel", url: "https://icepanel.io", category: "–î–∏–∞–≥—Ä–∞–º–º—ã" }
            ].map((link, index) => (
              <Card key={index} className="border-border bg-card/50 hover:bg-card/70 transition-all duration-200">
                <CardContent className="p-4">
                  <div className="flex items-center justify-between">
                    <div>
                      <h4 className="font-semibold text-foreground">{link.title}</h4>
                      <Badge variant="outline" className="text-xs mt-1">
                        {link.category}
                      </Badge>
                    </div>
                    <Button variant="ghost" size="sm" asChild>
                      <a href={link.url} target="_blank" rel="noopener noreferrer" className="text-primary hover:text-primary/80">
                        ‚Üí
                      </a>
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* Conclusion */}
        <section className="text-center py-16 bg-gradient-to-r from-card/50 to-secondary/20 rounded-2xl border border-border">
          <h2 className="text-3xl font-bold mb-6 text-foreground">–ó–∞–∫–ª—é—á–µ–Ω–∏–µ</h2>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto mb-8">
            –í–æ—Ç –∏ –Ω–∞—à –º–∏—Ä ‚Äî —Å AI, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏. 
            –ò–¥–∏—Ç–µ, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –∏–≥—Ä–∞–π—Ç–µ—Å—å —Å —ç—Ç–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ —Å—Ç—Ä–æ–π—Ç–µ —á—Ç–æ-—Ç–æ —Ç–æ–ø–æ–≤–æ–µ.
          </p>
          <p className="text-muted-foreground mb-6">
            –í–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏—Ç–µ –Ω–∞–º! üöÄ
          </p>
          <div className="flex justify-center space-x-4">
            <Badge variant="outline" className="px-4 py-2 text-sm border-tech-blue text-tech-blue">
              –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ
            </Badge>
            <Badge variant="outline" className="px-4 py-2 text-sm border-tech-green text-tech-green">
              –õ–æ–º–∞–π—Ç–µ
            </Badge>
            <Badge variant="outline" className="px-4 py-2 text-sm border-tech-orange text-tech-orange">
              –°—Ç—Ä–æ–π—Ç–µ
            </Badge>
          </div>
        </section>
      </div>
    </div>
  );
};

export default DevEcosystemDocs;